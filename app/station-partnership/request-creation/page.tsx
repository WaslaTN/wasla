'use client'

import React, { useState } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Building2, ArrowLeft, CheckCircle, Hexagon, Cpu, Terminal, Network } from 'lucide-react'
import StationPartnershipForm from '@/components/station-partnership/StationPartnershipForm'
import { useRouter } from 'next/navigation'
import { useLanguage } from '@/lib/hooks/useLanguage'

export default function RequestCreationPage() {
  const router = useRouter()
  const { t } = useLanguage()
  const [showSuccess, setShowSuccess] = useState(false)
  const [requestNumber, setRequestNumber] = useState('')

  const handleFormSuccess = (data: any) => {
    // Use the request number from the form submission (already generated by StationPartnershipService)
    const requestNum = data.requestNumber;

    // Save to localStorage
    const requestData = {
      requestNumber: requestNum,
      ...data,
      submittedAt: new Date().toISOString(),
      status: 'pending'
    }

    localStorage.setItem(`request-${requestNum}`, JSON.stringify(requestData))

    // Show success message
    setRequestNumber(requestNum)
    setShowSuccess(true)
  }

  const handleBackClick = () => {
    router.push('/station-partnership')
  }

  if (showSuccess) {
    return (
      <div className="min-h-screen relative bg-black">
        {/* Background */}
        <div className="fixed inset-0 z-0">
          <div className="absolute inset-0 bg-gradient-to-br from-emerald-900/20 via-black/80 to-emerald-950/20" />
          <div className="absolute inset-0 opacity-20" style={{
            backgroundImage: `
              linear-gradient(rgba(16, 185, 129, 0.1) 1px, transparent 1px),
              linear-gradient(90deg, rgba(16, 185, 129, 0.1) 1px, transparent 1px)
            `,
            backgroundSize: '100px 100px'
          }} />
        </div>

        <div className="relative z-10">
          {/* Navigation */}
                  <nav className="bg-black/80 backdrop-blur-md border-b border-emerald-500/30">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center h-16">
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-gradient-to-br from-emerald-500/20 to-cyan-500/20 rounded-lg flex items-center justify-center border border-emerald-500/30">
                  <Hexagon className="h-5 w-5 text-emerald-400" />
                </div>
                <h1 className="text-2xl font-bold text-white font-mono">
                  WASLA_SYSTEM
                </h1>
              </div>
              <button
                onClick={handleBackClick}
                className="text-white hover:text-emerald-400 transition-colors font-medium flex items-center gap-2 font-mono"
              >
                <ArrowLeft className="h-4 w-4" />
                BACK_TO_PARTNERSHIP
              </button>
            </div>
          </div>
        </nav>

          {/* Success Section */}
          <section className="py-20 px-4 sm:px-6 lg:px-8">
            <div className="max-w-4xl mx-auto text-center">
              <div className="bg-gray-900/50 backdrop-blur-sm border border-emerald-500/30 rounded-xl p-12 hover:shadow-2xl hover:shadow-emerald-500/20">
                <div className="w-20 h-20 bg-gradient-to-br from-emerald-500/20 to-cyan-500/20 rounded-full flex items-center justify-center mx-auto mb-6 border border-emerald-500/30">
                  <CheckCircle className="h-10 w-10 text-emerald-400" />
                </div>

                <h1 className="text-3xl sm:text-4xl font-bold text-white mb-4 font-mono">
                  {t('applicationSubmittedSuccessfully')}
                </h1>

                <div className="bg-emerald-600/10 border border-emerald-500/30 rounded-lg p-6 mb-8">
                  <h2 className="text-xl font-semibold text-emerald-400 mb-2 font-mono">
                    {t('yourRequestNumber')}
                  </h2>
                  <div className="text-4xl font-bold text-white font-mono tracking-wider">
                    {requestNumber}
                  </div>
                  <p className="text-emerald-400 text-sm mt-2 font-mono">
                    {t('pleaseSaveNumber')}
                  </p>
                </div>

                <div className="bg-cyan-600/10 border border-cyan-500/30 rounded-lg p-6 mb-8">
                  <h3 className="text-lg font-semibold text-cyan-400 mb-3 font-mono">
                    {t('whatsNext')}
                  </h3>
                  <div className="text-gray-300 text-left space-y-2 font-mono">
                    <p>• {t('applicationBeingReviewed')}</p>
                    <p>• {t('contactWithinBusinessDays')}</p>
                    <p>• {t('checkEmailForUpdates')}</p>
                    <p>• {t('useRequestNumberToTrack')}</p>
                  </div>
                </div>

                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <Button
                    onClick={() => {
                      localStorage.setItem('lastRequestNumber', requestNumber)
                      router.push('/station-partnership')
                    }}
                    className="bg-gradient-to-r from-emerald-600 to-cyan-600 hover:from-emerald-700 hover:to-cyan-700 text-white px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-200 border border-emerald-500/30 shadow-2xl shadow-emerald-500/20"
                  >
                    <Terminal className="mr-2 h-5 w-5" />
                    {t('backToPartnershipPage')}
                  </Button>

                  <Button
                    onClick={() => {
                      const requestData = localStorage.getItem(`request-${requestNumber}`)
                      if (requestData) {
                        const blob = new Blob([requestData], { type: 'application/json' })
                        const url = URL.createObjectURL(blob)
                        const a = document.createElement('a')
                        a.href = url
                        a.download = `request-${requestNumber}.json`
                        document.body.appendChild(a)
                        a.click()
                        document.body.removeChild(a)
                        URL.revokeObjectURL(url)
                      }
                    }}
                    variant="outline"
                    className="border-emerald-500/30 text-emerald-400 hover:bg-emerald-500/10 hover:text-emerald-300 px-8 py-3 text-lg font-semibold rounded-lg transition-all duration-200 font-mono"
                  >
                    {t('downloadApplicationBackup')}
                  </Button>
                </div>

                <p className="text-gray-400 text-sm mt-6 font-mono">
                  {t('needHelpContact')} {t('partnershipTeamEmail')}
                </p>
              </div>
            </div>
          </section>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen relative bg-black">
      {/* Background */}
      <div className="fixed inset-0 z-0">
        <div className="absolute inset-0 bg-gradient-to-br from-orange-900/20 via-black/80 to-red-950/20" />
        <div className="absolute inset-0 opacity-20" style={{
          backgroundImage: `
            linear-gradient(rgba(249, 115, 22, 0.1) 1px, transparent 1px),
            linear-gradient(90deg, rgba(239, 68, 68, 0.1) 1px, transparent 1px)
          `,
          backgroundSize: '100px 100px'
        }} />
      </div>

      <div className="relative z-10">
        {/* Navigation */}
        <nav className="bg-black/80 backdrop-blur-md border-b border-orange-500/30">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center h-16">
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-gradient-to-br from-orange-500/20 to-red-500/20 rounded-lg flex items-center justify-center border border-orange-500/30">
                  <Hexagon className="h-5 w-5 text-orange-400" />
                </div>
                <h1 className="text-2xl font-bold text-white font-mono">
                  WASLA_SYSTEM
                </h1>
              </div>
              <button
                onClick={handleBackClick}
                className="text-white hover:text-orange-400 transition-colors font-medium flex items-center gap-2 font-mono"
              >
                <ArrowLeft className="h-4 w-4" />
                {t('backToPartnership')}
              </button>
            </div>
          </div>
        </nav>

        {/* Header Section */}
        <section className="py-12 px-4 sm:px-6 lg:px-8">
          <div className="max-w-6xl mx-auto">
            <div className="bg-gray-900/50 backdrop-blur-sm border border-orange-500/30 rounded-xl p-8 mb-8 hover:shadow-2xl hover:shadow-orange-500/20">
              <div className="flex items-center gap-4 mb-4">
                <div className="w-12 h-12 bg-gradient-to-br from-orange-500/20 to-red-500/20 rounded-lg flex items-center justify-center border border-orange-500/30">
                  <Terminal className="h-6 w-6 text-orange-400" />
                </div>
                <div>
                  <h1 className="text-2xl sm:text-3xl font-bold text-white font-mono">
                    {t('applyForStationPartnership')}
                  </h1>
                  <p className="text-gray-400 font-mono">
                    {t('fillFormBelow')}
                  </p>
                </div>
              </div>

              <div className="bg-orange-600/10 border border-orange-500/30 rounded-lg p-4">
                <h3 className="text-orange-400 font-semibold mb-2 font-mono">{t('beforeYouStart')}</h3>
                <ul className="text-gray-300 text-sm space-y-1 font-mono">
                  <li>• {t('makeSureDocumentsReady')}</li>
                  <li>• {t('checkPartnershipRequirements')}</li>
                  <li>• {t('applicationReviewTakesDays')}</li>
                  <li>• {t('receiveRequestNumber')}</li>
                </ul>
              </div>
            </div>

            {/* Form Section */}
            <div className="bg-gray-900/50 backdrop-blur-sm border border-red-500/30 rounded-xl p-8 hover:shadow-2xl hover:shadow-red-500/20">
              <StationPartnershipForm onSuccess={handleFormSuccess} />
            </div>
          </div>
        </section>
      </div>
    </div>
  )
}